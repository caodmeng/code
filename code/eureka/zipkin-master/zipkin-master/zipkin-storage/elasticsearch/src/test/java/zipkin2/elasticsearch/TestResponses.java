/*
 * Copyright 2015-2019 The OpenZipkin Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package zipkin2.elasticsearch;

final class TestResponses {
  static final String SPANS = "{\n"
    + "  \"took\": 4,\n"
    + "  \"timed_out\": false,\n"
    + "  \"_shards\": {\n"
    + "    \"total\": 5,\n"
    + "    \"successful\": 5,\n"
    + "    \"skipped\": 0,\n"
    + "    \"failed\": 0\n"
    + "  },\n"
    + "  \"hits\": {\n"
    + "    \"total\": 4,\n"
    + "    \"max_score\": 0,\n"
    + "    \"hits\": [\n"
    + "      {\n"
    + "        \"_index\": \"zipkin:span-2019-07-20\",\n"
    + "        \"_type\": \"span\",\n"
    + "        \"_id\": \"7180c278b62e8f6a216a2aea45d08fc9-2a40476ca7a22f2c85ac18b9c1f3a99c\",\n"
    + "        \"_score\": 0,\n"
    + "        \"_source\": {\n"
    + "          \"traceId\": \"7180c278b62e8f6a216a2aea45d08fc9\",\n"
    + "          \"duration\": 350000,\n"
    + "          \"localEndpoint\": {\n"
    + "            \"serviceName\": \"frontend\",\n"
    + "            \"ipv4\": \"127.0.0.1\"\n"
    + "          },\n"
    + "          \"timestamp_millis\": 1,\n"
    + "          \"kind\": \"SERVER\",\n"
    + "          \"name\": \"get\",\n"
    + "          \"id\": \"0000000000000001\",\n"
    + "          \"timestamp\": 1000\n"
    + "        }\n"
    + "      },\n"
    + "      {\n"
    + "        \"_index\": \"zipkin:span-2019-07-20\",\n"
    + "        \"_type\": \"span\",\n"
    + "        \"_id\": \"7180c278b62e8f6a216a2aea45d08fc9-466fed1eb1d5cef4a76a227e83a7a7a8\",\n"
    + "        \"_score\": 0,\n"
    + "        \"_source\": {\n"
    + "          \"traceId\": \"7180c278b62e8f6a216a2aea45d08fc9\",\n"
    + "          \"duration\": 200000,\n"
    + "          \"remoteEndpoint\": {\n"
    + "            \"serviceName\": \"backend\",\n"
    + "            \"ipv4\": \"192.168.99.101\",\n"
    + "            \"port\": 9000\n"
    + "          },\n"
    + "          \"localEndpoint\": {\n"
    + "            \"serviceName\": \"frontend\",\n"
    + "            \"ipv4\": \"127.0.0.1\"\n"
    + "          },\n"
    + "          \"timestamp_millis\": 51,\n"
    + "          \"kind\": \"CLIENT\",\n"
    + "          \"name\": \"get\",\n"
    + "          \"annotations\": [\n"
    + "            {\n"
    + "              \"timestamp\": 101000,\n"
    + "              \"value\": \"foo\"\n"
    + "            }\n"
    + "          ],\n"
    + "          \"id\": \"0000000000000002\",\n"
    + "          \"parentId\": \"0000000000000001\",\n"
    + "          \"timestamp\": 51000,\n"
    + "          \"tags\": {\n"
    + "            \"clnt/finagle.version\": \"6.45.0\",\n"
    + "            \"http.path\": \"/api\"\n"
    + "          }\n"
    + "        }\n"
    + "      },\n"
    + "      {\n"
    + "        \"_index\": \"zipkin:span-2019-07-20\",\n"
    + "        \"_type\": \"span\",\n"
    + "        \"_id\": \"7180c278b62e8f6a216a2aea45d08fc9-74d915e86c8f53d59ef5850b4e966199\",\n"
    + "        \"_score\": 0,\n"
    + "        \"_source\": {\n"
    + "          \"traceId\": \"7180c278b62e8f6a216a2aea45d08fc9\",\n"
    + "          \"duration\": 150000,\n"
    + "          \"shared\": true,\n"
    + "          \"localEndpoint\": {\n"
    + "            \"serviceName\": \"backend\",\n"
    + "            \"ipv4\": \"192.168.99.101\",\n"
    + "            \"port\": 9000\n"
    + "          },\n"
    + "          \"timestamp_millis\": 101,\n"
    + "          \"kind\": \"SERVER\",\n"
    + "          \"name\": \"get\",\n"
    + "          \"id\": \"0000000000000002\",\n"
    + "          \"parentId\": \"0000000000000001\",\n"
    + "          \"timestamp\": 101000\n"
    + "        }\n"
    + "      },\n"
    + "      {\n"
    + "        \"_index\": \"zipkin:span-2019-07-20\",\n"
    + "        \"_type\": \"span\",\n"
    + "        \"_id\": \"7180c278b62e8f6a216a2aea45d08fc9-989c12147ff4ca03ce10d8488d93b89d\",\n"
    + "        \"_score\": 0,\n"
    + "        \"_source\": {\n"
    + "          \"traceId\": \"7180c278b62e8f6a216a2aea45d08fc9\",\n"
    + "          \"duration\": 50000,\n"
    + "          \"remoteEndpoint\": {\n"
    + "            \"serviceName\": \"db\",\n"
    + "            \"ipv6\": \"2001:db8::c001\",\n"
    + "            \"port\": 3036\n"
    + "          },\n"
    + "          \"localEndpoint\": {\n"
    + "            \"serviceName\": \"backend\",\n"
    + "            \"ipv4\": \"192.168.99.101\",\n"
    + "            \"port\": 9000\n"
    + "          },\n"
    + "          \"timestamp_millis\": 151,\n"
    + "          \"kind\": \"CLIENT\",\n"
    + "          \"name\": \"query\",\n"
    + "          \"annotations\": [\n"
    + "            {\n"
    + "              \"timestamp\": 191000,\n"
    + "              \"value\": \"â»©\"\n"
    + "            }\n"
    + "          ],\n"
    + "          \"id\": \"0000000000000003\",\n"
    + "          \"parentId\": \"0000000000000002\",\n"
    + "          \"timestamp\": 151000,\n"
    + "          \"tags\": {\n"
    + "            \"error\": \"\uD83D\uDCA9\"\n"
    + "          }\n"
    + "        }\n"
    + "      }\n"
    + "    ]\n"
    + "  }\n"
    + "}";
  static final String SERVICE_NAMES =
    "{\n"
      + "  \"took\": 4,\n"
      + "  \"timed_out\": false,\n"
      + "  \"_shards\": {\n"
      + "    \"total\": 5,\n"
      + "    \"successful\": 5,\n"
      + "    \"failed\": 0\n"
      + "  },\n"
      + "  \"hits\": {\n"
      + "    \"total\": 1,\n"
      + "    \"max_score\": 0,\n"
      + "    \"hits\": []\n"
      + "  },\n"
      + "  \"aggregations\": {\n"
      + "    \"binaryAnnotations_agg\": {\n"
      + "      \"doc_count\": 1,\n"
      + "      \"binaryAnnotationsServiceName_agg\": {\n"
      + "        \"doc_count_error_upper_bound\": 0,\n"
      + "        \"sum_other_doc_count\": 0,\n"
      + "        \"buckets\": [\n"
      + "          {\n"
      + "            \"key\": \"yak\",\n"
      + "            \"doc_count\": 1\n"
      + "          }\n"
      + "        ]\n"
      + "      }\n"
      + "    },\n"
      + "    \"annotations_agg\": {\n"
      + "      \"doc_count\": 2,\n"
      + "      \"annotationsServiceName_agg\": {\n"
      + "        \"doc_count_error_upper_bound\": 0,\n"
      + "        \"sum_other_doc_count\": 0,\n"
      + "        \"buckets\": [\n"
      + "          {\n"
      + "            \"key\": \"service\",\n"
      + "            \"doc_count\": 2\n"
      + "          }\n"
      + "        ]\n"
      + "      }\n"
      + "    }\n"
      + "  }\n"
      + "}";

  static final String SPAN_NAMES =
    "{\n"
      + "  \"took\": 1,\n"
      + "  \"timed_out\": false,\n"
      + "  \"_shards\": {\n"
      + "    \"total\": 5,\n"
      + "    \"successful\": 5,\n"
      + "    \"failed\": 0\n"
      + "  },\n"
      + "  \"hits\": {\n"
      + "    \"total\": 2,\n"
      + "    \"max_score\": 0,\n"
      + "    \"hits\": []\n"
      + "  },\n"
      + "  \"aggregations\": {\n"
      + "    \"name_agg\": {\n"
      + "      \"doc_count_error_upper_bound\": 0,\n"
      + "      \"sum_other_doc_count\": 0,\n"
      + "      \"buckets\": [\n"
      + "        {\n"
      + "          \"key\": \"methodcall\",\n"
      + "          \"doc_count\": 1\n"
      + "        },\n"
      + "        {\n"
      + "          \"key\": \"yak\",\n"
      + "          \"doc_count\": 1\n"
      + "        }\n"
      + "      ]\n"
      + "    }\n"
      + "  }\n"
      + "}";

  static final String AUTOCOMPLETE_VALUES = "{\n"
    + "  \"took\": 12,\n"
    + "  \"timed_out\": false,\n"
    + "  \"_shards\": {\n"
    + "    \"total\": 5,\n"
    + "    \"successful\": 5,\n"
    + "    \"skipped\": 0,\n"
    + "    \"failed\": 0\n"
    + "  },\n"
    + "  \"hits\": {\n"
    + "    \"total\": 2,\n"
    + "    \"max_score\": 0,\n"
    + "    \"hits\": [\n"
    + "      {\n"
    + "        \"_index\": \"zipkin:autocomplete-2018-12-08\",\n"
    + "        \"_type\": \"autocomplete\",\n"
    + "        \"_id\": \"http.method|POST\",\n"
    + "        \"_score\": 0\n"
    + "      },\n"
    + "      {\n"
    + "        \"_index\": \"zipkin:autocomplete-2018-12-08\",\n"
    + "        \"_type\": \"autocomplete\",\n"
    + "        \"_id\": \"http.method|GET\",\n"
    + "        \"_score\": 0\n"
    + "      }\n"
    + "    ]\n"
    + "  },\n"
    + "  \"aggregations\": {\n"
    + "    \"tagValue\": {\n"
    + "      \"doc_count_error_upper_bound\": 0,\n"
    + "      \"sum_other_doc_count\": 0,\n"
    + "      \"buckets\": [\n"
    + "        {\n"
    + "          \"key\": \"get\",\n"
    + "          \"doc_count\": 1\n"
    + "        },\n"
    + "        {\n"
    + "          \"key\": \"post\",\n"
    + "          \"doc_count\": 1\n"
    + "        }\n"
    + "      ]\n"
    + "    }\n"
    + "  }\n"
    + "}";
}

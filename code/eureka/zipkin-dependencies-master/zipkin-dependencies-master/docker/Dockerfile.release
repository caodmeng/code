#
# Copyright 2016-2019 The OpenZipkin Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
#

# Download artifact from bintray, where the artifact should have been published by now.

FROM openzipkin/zipkin-builder as built

ARG source_branch

# source_branch is something like
#
#   master       - Building the master branch. This cut command will return 'master', and Dockerfiles will ignore it
#   1.0.1        - Building a release image along with a new Zipkin server version. This cut command will return
#                  '1.0.1' and Dockerfiles will use it to fetch the correct version of Zipkin.
#   docker-1.0.1 - Building a release image, but not a new Zipkin server. This cut command will return
#                  '1.0.1' and Dockerfiles will use it to fetch the correct version of Zipkin.

WORKDIR /zipkin-dependencies

RUN export version=$(echo "${source_branch}" | cut -d '-' -f 2) && \
# Download jars using Maven. It will try to resolve the artifact from Maven Central, which might
# not work right away if the sync is taking time, followed by bintray, which should always work
# since it's where we publish to.
  mvn org.apache.maven.plugins:maven-dependency-plugin:get \
    -DremoteRepositories=bintray::::https://dl.bintray.com/openzipkin/maven -Dtransitive=false \
    -Dartifact=io.zipkin.dependencies:zipkin-dependencies:${version}:jar && \
  cp ~/.m2/repository/io/zipkin/dependencies/zipkin-dependencies/${version}/zipkin-dependencies-${version}.jar .

FROM openzipkin/jre-full:1.8.0_212
MAINTAINER OpenZipkin "http://zipkin.io/"

ARG STORAGE_TYPE

# Use to set heap, trust store or other system properties.
ENV JAVA_OPTS -Djava.security.egd=file:/dev/./urandom

# Adds coreutils to allow date formatting of 'yesterday'
RUN apk add --no-cache coreutils

WORKDIR /zipkin-dependencies

COPY --from=built /zipkin-dependencies/* /zipkin-dependencies/

# Enable cron by running with entrypoint: crond -f -d 8
# * Bundling this configuration is a convenience, noting not everyone will use cron
# * Cron invokes this job hourly to process today's spans and daily to process yesterday's
COPY docker/periodic/ /etc/periodic/

# Default entrypoint is to run the dependencies job on-demand, processing today's spans.
CMD java ${JAVA_OPTS} -jar zipkin-dependencies-*.jar
